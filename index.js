var express = require('express');
var app = express();
var nodemailer = require('nodemailer');
var router = express.Router();
var mongodb = require('mongodb');
// Import Mongoose
let mongoose = require('mongoose');
var bodyparser = require('body-parser');
//var assert = require('assert');
//var MongoClient = mongodb.MongoClient;
//var url = "mongodb:localhost:27017/Booking";
var path = require('path');
//app.use(bodyparser.json());
app.use(bodyparser.urlencoded({
  extended: true
}));
app.use(bodyparser.json());
// Connect to Mongoose and set connection variable
mongoose.connect('mongodb://localhost/resthub', { useNewUrlParser: true});

var db = mongoose.connection;

// Added check for DB connection

if(!db)
  console.log("Error connecting db")
else
  console.log("Db connected successfully")

app.use(express.static("public"));


// Import user controller
var UsersController = require('./UsersController');
router.route('/submit').post(UsersController.new);
// app.post('/submit', (req,res)=>{
// console.log('req', req.body);
// console.log("hi i am in")});
//Import Booking Controller 
var BookingController= require('./bookingDetailsController');
router.route('/booking').post(BookingController.new);
  


var hostname;
var hostemail;
var visitorname;
var visitoremail;
var visitorphone;
var checkintime ;
var checkout;

app.post('/submit', (req , res , next)=>{
  hostname = req.body.name
  hostemail = req.body.email
  next();
})

app.post('/booking' , (req ,res ,next)=>{
   checkintime =  new Date();
   visitorname =  req.body.name
   visitoremail = req.body.email
   visitorphone = req.body.phone

   next();
   
})


// This email will be send to host when visitor complete his details

app.post('/booking', (req, res,next) => {
  const output = `
    <p>You have a new contact request</p>
    <h3>Visitor Details</h3>
    <ul>  
      <li>Name: ${req.body.name}</li>
      <li>Email: ${req.body.email}</li>
      <li>Phone: ${req.body.phonenumber}</li>
    </ul>
  `;

  // create reusable transporter object using the default SMTP transport
  let transporter = nodemailer.createTransport({
    host: 'mail.YOURDOMAIN.com',
    port: 587,
    secure: false, // true for 465, false for other ports
    auth: {
        user: 'YOUREMAIL', // generated ethereal user
        pass: 'YOURPASSWORD'  // generated ethereal password
    },
    tls:{
      rejectUnauthorized:false
    }
  });

  // setup email data with unicode symbols
  let mailOptions = {
      from: '"Nodemailer Contact" <your@email.com>', // sender address
      to: `${hostemail}`, // list of receivers
      subject: 'Visitor', // Subject line
      text: "this is autogenerated email", // plain text body
      html: output // html body
  };

  // send mail with defined transport object
  transporter.sendMail(mailOptions, (error, info) => {
      if (error) {
          return console.log(error);
      }
      console.log('Message sent: %s', info.messageId);   
      console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));

      res.render('contact', {msg:'Email has been sent'});

      next();
  });
  });






  //this email will be send to vistitor when he checkout

  app.post('/check', (req, res,next) => {
    checkout = new Date();
    const output = `
      <p>You have a new contact request</p>
      <h3>Visitor Details</h3>
      <ul>  
        <li>Name: ${visitorname}</li>
        <li>Email: ${visitoremail}</li>
        <li>Phone: ${visitorphone}</li>
        <li>Address: "enter the address you want to show"</li>
        <li>Check-In-Time: ${checkintime}</li>
        <li>Check-Out-Time: ${checkout}</li>
        <li>HostName : ${hostname}</li>
      </ul>
    `;
  
    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
      host: 'mail.YOURDOMAIN.com',
      port: 587,
      secure: false, // true for 465, false for other ports
      auth: {
          user: 'YOUREMAIL', // generated ethereal user
          pass: 'YOURPASSWORD'  // generated ethereal password
      },
      tls:{
        rejectUnauthorized:false
      }
    });
  
    // setup email data with unicode symbols
    let mailOptions = {
        from: '"Nodemailer Contact" <your@email.com>', // sender address
        to: `${visitoremail}` , // list of receivers
        subject: 'Details of Visit', // Subject line
        text: "this is autogenerated email", // plain text body
        html: output // html body
    };
  
    // send mail with defined transport object
    transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
            return console.log(error);
        }
        console.log('Message sent: %s', info.messageId);   
        console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));
  
        res.render('contact', {msg:'Email has been sent'});
  
        next;
    });
    });
  

router.get('/',(req,resp)=>{
  resp.sendFile(path.join(__dirname + '/Login.html'));
})

router.get('/Visitor',(req , resp)=>{
  resp.sendFile(path.join(__dirname + '/Visitor.html'))
})
router.get('/confirm',(req , resp)=>{
  resp.sendFile(path.join(__dirname + '/Confirm.html'))
})

router.get('/check', (req , resp)=>{
  resp.sendFile(path.join(__dirname + '/Visitor.html'))
})


app.use(router);
app.listen(3000);
console.log("app is running at 3000 port");